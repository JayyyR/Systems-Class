-----------------------------------------------------------------------------
Selection algorithm                      k = 1       k is the       k = n
                                                     median
=============================================================================
sort select				1.32	      1.3	     1.32

-----------------------------------------------------------------------------
partial sort select			0.02	      NA	     1.34

-----------------------------------------------------------------------------
minimum binary heap select		0.19	      2.88	     7.75

-----------------------------------------------------------------------------
partial maximum binary heap select	0.07	      1.66	     0.18

-----------------------------------------------------------------------------
quickselect (with median-of-three	0.12	      0.17	     0.12
rule for choosing the pivot)
-----------------------------------------------------------------------------
linear select (with median-of-median	0.52	      0.62	     0.57
of-five rule for choosing the pivot)
-----------------------------------------------------------------------------

Table 2.  Timing results for the selection algorithms with n = 10000000.


These are from a single run

These tests were run on bg8

I used the compiler optimization -O

partial sort select takes so long when k is the median because the algorithm is 
comparing half of the 10,000,000 elements to the other half, and inserting them into the correct position.
This means that the algorithm could technically be doing 5,000,000 insertions using and insertion-sort
type algorithm. This is why it takes so long to run and instead of waiting, I put NA.
